name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
    
    - name: Get version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Generate changelog
      id: changelog
      run: |
        # Extract changelog for this version
        VERSION=${{ steps.get_version.outputs.VERSION }}
        if [ -f CHANGELOG.md ]; then
          # Get changelog section for this version
          awk "/^## \[$VERSION\]/,/^## \[/{if(/^## \[/ && !/^## \[$VERSION\]/) exit; print}" CHANGELOG.md > release_notes.md
        else
          echo "Release $VERSION" > release_notes.md
        fi
    
    - name: Build binaries
      run: |
        mkdir -p dist
        
        # Build for all platforms
        platforms=("linux/amd64" "linux/arm64" "darwin/amd64" "darwin/arm64" "windows/amd64" "windows/arm64")
        
        for platform in "${platforms[@]}"; do
          os=${platform%/*}
          arch=${platform#*/}
          
          binary_name="axon"
          if [ "$os" = "windows" ]; then
            binary_name="axon.exe"
          fi
          
          echo "Building for $os/$arch..."
          CGO_ENABLED=0 GOOS=$os GOARCH=$arch go build \
            -ldflags="-w -s -X main.version=${{ steps.get_version.outputs.VERSION }}" \
            -o "dist/axon-$os-$arch-${{ steps.get_version.outputs.VERSION }}/$binary_name" .
          
          # Create archive
          cd dist
          if [ "$os" = "windows" ]; then
            zip -r "axon-$os-$arch-${{ steps.get_version.outputs.VERSION }}.zip" "axon-$os-$arch-${{ steps.get_version.outputs.VERSION }}"
          else
            tar -czf "axon-$os-$arch-${{ steps.get_version.outputs.VERSION }}.tar.gz" "axon-$os-$arch-${{ steps.get_version.outputs.VERSION }}"
          fi
          cd ..
        done
    
    - name: Generate checksums
      run: |
        cd dist
        sha256sum *.tar.gz *.zip > checksums.txt
        cd ..
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        name: Axon ${{ steps.get_version.outputs.VERSION }}
        body_path: release_notes.md
        draft: false
        prerelease: ${{ contains(steps.get_version.outputs.VERSION, '-') }}
        files: |
          dist/*.tar.gz
          dist/*.zip
          dist/checksums.txt
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-packages:
    name: Publish Packages
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Future: Add package publishing for different package managers
    # - Homebrew formula
    # - APT repository
    # - Chocolatey package
    # - AUR package
    
    - name: Placeholder for package publishing
      run: echo "Package publishing will be implemented here"

  update-documentation:
    name: Update Documentation
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Update version in README
      run: |
        VERSION=${{ github.ref_name }}
        # Update version references in documentation
        sed -i "s/v[0-9]\+\.[0-9]\+\.[0-9]\+/$VERSION/g" README.md
    
    - name: Create documentation update PR
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "docs: update version references to ${{ github.ref_name }}"
        title: "Update documentation for release ${{ github.ref_name }}"
        body: |
          Automated update of version references in documentation following release ${{ github.ref_name }}.
          
          Changes:
          - Updated version references in README.md
        branch: docs/update-version-${{ github.ref_name }}
        delete-branch: true

